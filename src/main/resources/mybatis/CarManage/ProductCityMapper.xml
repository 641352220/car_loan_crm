<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.CarManage.dao.ProductCityDao">

	<select id="get" resultType="com.bootdo.CarManage.domain.ProductCityDO">
		select `car_product_id`,`city_id`,`level` from car_product_city where car_product_id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.CarManage.domain.ProductCityDO">
		select `car_product_id`,`city_id`,`level` from car_product_city
        <where>  
		  		  <if test="carProductId != null and carProductId != ''"> and car_product_id = #{carProductId} </if>
		  		  <if test="cityId != null and cityId != ''"> and city_id = #{cityId} </if>
		  		  <if test="level != null and level != ''"> and level = #{level} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by car_product_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from car_product_city
		 <where>  
		  		  <if test="carProductId != null and carProductId != ''"> and car_product_id = #{carProductId} </if>
		  		  <if test="cityId != null and cityId != ''"> and city_id = #{cityId} </if>
		  		  <if test="level != null and level != ''"> and level = #{level} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.CarManage.domain.ProductCityDO">
		insert into car_product_city
		(
			`car_product_id`, 
			`city_id`, 
			`level`
		)
		values
		(
			#{carProductId}, 
			#{cityId}, 
			#{level}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.CarManage.domain.ProductCityDO">
		update car_product_city 
		<set>
			<if test="cityId != null">`city_id` = #{cityId}, </if>
			<if test="level != null">`level` = #{level}</if>
		</set>
		where car_product_id = #{carProductId}
	</update>
	
	<delete id="remove">
		delete from car_product_city where car_product_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from car_product_city where car_product_id in 
		<foreach item="carProductId" collection="array" open="(" separator="," close=")">
			#{carProductId}
		</foreach>
	</delete>

</mapper>