<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.CarManage.dao.DetailsDao">

	<select id="get" resultType="com.bootdo.CarManage.domain.DetailsDO">
		select `car_details_id`,`car_id`,`details` from car_details where car_details_id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.CarManage.domain.DetailsDO">
		select `car_details_id`,`car_id`,`details` from car_details
        <where>  
		  		  <if test="carDetailsId != null and carDetailsId != ''"> and car_details_id = #{carDetailsId} </if>
		  		  <if test="carId != null and carId != ''"> and car_id = #{carId} </if>
		  		  <if test="details != null and details != ''"> and details = #{details} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by car_details_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from car_details
		 <where>  
		  		  <if test="carDetailsId != null and carDetailsId != ''"> and car_details_id = #{carDetailsId} </if>
		  		  <if test="carId != null and carId != ''"> and car_id = #{carId} </if>
		  		  <if test="details != null and details != ''"> and details = #{details} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.CarManage.domain.DetailsDO" useGeneratedKeys="true" keyProperty="carDetailsId">
		insert into car_details
		(
			`car_id`, 
			`details`
		)
		values
		(
			#{carId}, 
			#{details}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.CarManage.domain.DetailsDO">
		update car_details 
		<set>
			<if test="carId != null">`car_id` = #{carId}, </if>
			<if test="details != null">`details` = #{details}</if>
		</set>
		where car_details_id = #{carDetailsId}
	</update>
	
	<delete id="remove">
		delete from car_details where car_details_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from car_details where car_details_id in 
		<foreach item="carDetailsId" collection="array" open="(" separator="," close=")">
			#{carDetailsId}
		</foreach>
	</delete>

</mapper>