<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.CarManage.dao.SubsidiaryDao">

	<select id="get" resultType="com.bootdo.CarManage.domain.SubsidiaryDO">
		select `subsidiary_id`,`brand_id`,`subsidiary_name` from car_subsidiary where subsidiary_id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.CarManage.domain.SubsidiaryDO">
		select `subsidiary_id`,`brand_id`,`subsidiary_name` from car_subsidiary
        <where>  
		  		  <if test="subsidiaryId != null and subsidiaryId != ''"> and subsidiary_id = #{subsidiaryId} </if>
		  		  <if test="brandId != null and brandId != ''"> and brand_id = #{brandId} </if>
		  		  <if test="subsidiaryName != null and subsidiaryName != ''"> and subsidiary_name = #{subsidiaryName} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by subsidiary_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from car_subsidiary
		 <where>  
		  		  <if test="subsidiaryId != null and subsidiaryId != ''"> and subsidiary_id = #{subsidiaryId} </if>
		  		  <if test="brandId != null and brandId != ''"> and brand_id = #{brandId} </if>
		  		  <if test="subsidiaryName != null and subsidiaryName != ''"> and subsidiary_name = #{subsidiaryName} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.CarManage.domain.SubsidiaryDO" useGeneratedKeys="true" keyProperty="subsidiaryId">
		insert into car_subsidiary
		(
			`brand_id`, 
			`subsidiary_name`
		)
		values
		(
			#{brandId}, 
			#{subsidiaryName}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.CarManage.domain.SubsidiaryDO">
		update car_subsidiary 
		<set>
			<if test="brandId != null">`brand_id` = #{brandId}, </if>
			<if test="subsidiaryName != null">`subsidiary_name` = #{subsidiaryName}</if>
		</set>
		where subsidiary_id = #{subsidiaryId}
	</update>
	
	<delete id="remove">
		delete from car_subsidiary where subsidiary_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from car_subsidiary where subsidiary_id in 
		<foreach item="subsidiaryId" collection="array" open="(" separator="," close=")">
			#{subsidiaryId}
		</foreach>
	</delete>

</mapper>