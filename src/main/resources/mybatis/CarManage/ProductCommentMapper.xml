<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.CarManage.dao.ProductCommentDao">

	<select id="get" resultType="com.bootdo.CarManage.domain.ProductCommentDO">
		select `car_product_comment_id`,`order_id`,`car_id`,`car_product_id`,`user_id`,`comment_name`,`state`,`comment_time`,`update_time`,`fraction`,`comment_content` from car_product_comment where car_product_comment_id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.CarManage.domain.ProductCommentDO">
		SELECT a.*,b.car_product_name as carProductName,CONCAT(c.brand_name,c.model_name,c.style_name) as carName
		FROM car_product_comment as a,car_product as b,car_car as c WHERE a.car_product_id = b.car_product_id AND a.car_id = c.car_id
		<if test="carProductCommentId != null and carProductCommentId != ''"> and car_product_comment_id = #{carProductCommentId} </if>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by car_product_comment_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) FROM car_product_comment as a,car_product as b,car_car as c WHERE a.car_product_id = b.car_product_id AND a.car_id = c.car_id
		<if test="carProductCommentId != null and carProductCommentId != ''"> and car_product_comment_id = #{carProductCommentId} </if>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.CarManage.domain.ProductCommentDO" useGeneratedKeys="true" keyProperty="carProductCommentId">
		insert into car_product_comment
		(
			`order_id`, 
			`car_id`, 
			`car_product_id`, 
			`user_id`, 
			`comment_name`, 
			`state`, 
			`comment_time`, 
			`update_time`, 
			`fraction`, 
			`comment_content`
		)
		values
		(
			#{orderId}, 
			#{carId}, 
			#{carProductId}, 
			#{userId}, 
			#{commentName}, 
			#{state}, 
			#{commentTime}, 
			#{updateTime}, 
			#{fraction}, 
			#{commentContent}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.CarManage.domain.ProductCommentDO">
		update car_product_comment 
		<set>
			<if test="orderId != null">`order_id` = #{orderId}, </if>
			<if test="carId != null">`car_id` = #{carId}, </if>
			<if test="carProductId != null">`car_product_id` = #{carProductId}, </if>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="commentName != null">`comment_name` = #{commentName}, </if>
			<if test="state != null">`state` = #{state}, </if>
			<if test="commentTime != null">`comment_time` = #{commentTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="fraction != null">`fraction` = #{fraction}, </if>
			<if test="commentContent != null">`comment_content` = #{commentContent}</if>
		</set>
		where car_product_comment_id = #{carProductCommentId}
	</update>
	
	<delete id="remove">
		delete from car_product_comment where car_product_comment_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from car_product_comment where car_product_comment_id in 
		<foreach item="carProductCommentId" collection="array" open="(" separator="," close=")">
			#{carProductCommentId}
		</foreach>
	</delete>

	<select id="getPJF" resultType="java.lang.Integer">
		select SUM(fraction)/COUNT(1) from car_product_comment where car_product_id = #{carProductId}
	</select>
</mapper>