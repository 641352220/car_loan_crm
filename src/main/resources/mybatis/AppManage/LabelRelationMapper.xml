<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.AppManage.dao.LabelRelationDao">

	<select id="get" resultType="com.bootdo.AppManage.domain.LabelRelationDO">
		select `relation_id`,`label_id`,`type` from app_label_relation where relation_id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.AppManage.domain.LabelRelationDO">
		select `relation_id`,`label_id`,`type` from app_label_relation
        <where>  
		  		  <if test="relationId != null and relationId != ''"> and relation_id = #{relationId} </if>
		  		  <if test="labelId != null and labelId != ''"> and label_id = #{labelId} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by relation_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from app_label_relation
		 <where>  
		  		  <if test="relationId != null and relationId != ''"> and relation_id = #{relationId} </if>
		  		  <if test="labelId != null and labelId != ''"> and label_id = #{labelId} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.AppManage.domain.LabelRelationDO">
		insert into app_label_relation
		(
			`relation_id`, 
			`label_id`, 
			`type`
		)
		values
		(
			#{relationId}, 
			#{labelId}, 
			#{type}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.AppManage.domain.LabelRelationDO">
		update app_label_relation 
		<set>
			<if test="labelId != null">`label_id` = #{labelId}, </if>
			<if test="type != null">`type` = #{type}</if>
		</set>
		where relation_id = #{relationId}
	</update>
	
	<delete id="remove">
		delete from app_label_relation where relation_id = #{id} AND `type` in (${type})
	</delete>
	
	<delete id="batchRemove">
		delete from app_label_relation where relation_id in 
		<foreach item="relationId" collection="array" open="(" separator="," close=")">
			#{relationId}
		</foreach>
	</delete>

</mapper>