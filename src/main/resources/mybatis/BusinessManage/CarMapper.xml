<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.BusinessManage.dao.BusinessCarDao">

	<select id="get" resultType="com.bootdo.BusinessManage.domain.BusinessCarDO">
		select `business_id`,`brand_id` from business_car where business_id = #{value}
	</select>

	<select id="getByBusinessIdAndBrandId" resultType="com.bootdo.BusinessManage.domain.BusinessCarDO">
		select `business_id`,`brand_id` from business_car where business_id = #{businessId} AND brand_id = #{brandId}
	</select>

	<select id="list" resultType="com.bootdo.BusinessManage.domain.BusinessCarDO">
		select `business_id`,`brand_id` from business_car
        <where>  
		  		  <if test="businessId != null and businessId != ''"> and business_id = #{businessId} </if>
		  		  <if test="brandId != null and brandId != ''"> and brand_id = #{brandId} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by business_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from business_car
		 <where>  
		  		  <if test="businessId != null and businessId != ''"> and business_id = #{businessId} </if>
		  		  <if test="brandId != null and brandId != ''"> and brand_id = #{brandId} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.BusinessManage.domain.BusinessCarDO">
		insert into business_car
		(
			`business_id`, 
			`brand_id`
		)
		values
		(
			#{businessId}, 
			#{brandId}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.BusinessManage.domain.BusinessCarDO">
		update business_car 
		<set>
			<if test="brandId != null">`brand_id` = #{brandId}</if>
		</set>
		where business_id = #{businessId}
	</update>
	
	<delete id="remove">
		delete from business_car where business_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from business_car where business_id in 
		<foreach item="businessId" collection="array" open="(" separator="," close=")">
			#{businessId}
		</foreach>
	</delete>

</mapper>